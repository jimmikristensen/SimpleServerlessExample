service: shoppinglist-functions # your service name

frameworkVersion: ">=1.1.0 <2.0.0" # Serverless version

provider:
  name: aws
  runtime: nodejs8.10

  stage: dev # default stage
  region: eu-west-1 # default region

  # service wide environment variables here
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}

  # the lambda function's IAM role - allow access to the dynamodb resource
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: functions/create.execute
    events:
    - http:
        path: shoppinglist
        method: post
        cors: true
  get:
    handler: functions/get.execute
    events:
    - http:
        path: shoppinglist/{id}
        method: get
        cors: true
  list:
    handler: functions/list.execute
    events:
    - http:
        path: shoppinglist
        method: get
        cors: true
  delete:
    handler: functions/delete.execute
    events:
    - http:
        path: shoppinglist/{id}
        method: delete
        cors: true
  replace:
    handler: functions/replace.execute
    events:
    - http:
        path: shoppinglist/{id}
        method: PUT
        cors: true

resources:
  Resources:
    ShoppingListDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        KeySchema:
        - AttributeName: id
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}